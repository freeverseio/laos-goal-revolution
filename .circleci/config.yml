version: 2.1

orbs:
  kube-orb: circleci/kubernetes@1.3.1
  helm: circleci/helm@3.0.2

commands:
  install-helmfile:
    description: Install helmfile
    steps:
      - run:
          name: Install helmfile
          command: ./scripts/install-helmfile.sh
  dockerize-and-push:
    parameters:
      image:
        type: string
      root:
        type: string
    steps:
      - attach_workspace:
          at: ./
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: |          
          cd << parameters.root >>
          echo "Docker images for CIRCLE_SHA1 will be pushed"
          docker build -t << parameters.image >>:$CIRCLE_SHA1 .
          docker push << parameters.image >>:$CIRCLE_SHA1
 
jobs:

  deploy_to_cluster:
    parameters:
      environment:
        type: string
        default: development
    description: Deploy to << parameters.environment >> environment
    docker:
      - image: cimg/deploy:2023.09
    steps:
      - checkout
      - kube-orb/install-kubectl:
          kubectl-version: 'v1.25.14'
      - when:
          condition:
            equal: [ development, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_DATA
      - when:
          condition:
            equal: [ staging, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_PROTOSTAR_STG_DATA
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Deploy to << parameters.environment >> environment
          command: |
            cd _deployments
            helmfile sync --environment << parameters.environment >>
  
  deployment-test:
    parameters:
      root:
        type: string
        default: "" 
    docker:
      - image: cimg/base:2022.08
    steps:
      - checkout
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Test Helmfile
          command: |
            cd _deployments/<< parameters.root >>
            helmfile lint


  build:
    parameters:
      root:
        type: string
        default: ""
      image:
        type: string
        default: ""
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and Push Docker Image
          command: |
            cd << parameters.root >>
            npm ci
      - dockerize-and-push:
          image: << parameters.image >>
          root: << parameters.root >>

workflows:
  ci-workflow:
    jobs:
      - build:
          name: build-goalrev-api
          root: goalrev-api
          image: freeverseio/goalrev-api
          context: dockerhub
          filters:
            branches:
              only:
                - main
      - build:
          name: build-goalrev-core
          root: goalrev-core
          image: freeverseio/goalrev-core
          context: dockerhub
          filters:
            branches:
              only:
                - main
      - build:
          name: build-goalrev-processor
          root: goalrev-processor
          image: freeverseio/goalrev-processor
          context: dockerhub
          filters:
            branches:
              only:
                - main
      - build:
          name: build-goalrev-ganache-core
          root: goalrev-truffle-core
          image: freeverseio/goalrev-ganache-core
          context: dockerhub
          filters:
            branches:
              only:
                - main

      - deployment-test

      - approval:
          type: approval
          name: approve-api-deploy
          requires:
            - deployment-test
            - build-goalrev-api
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: approve-core-deploy
          requires:
            - deployment-test
            - build-goalrev-core
          filters:
            branches:
              only:
                - main      
      - approval:
          type: approval
          name: approve-processor-deploy
          requires:
            - deployment-test
            - build-goalrev-processor
          filters:
            branches:
              only:
                - main
      - approval:
          type: approval
          name: approve-ganache-core-deploy
          requires:
            - deployment-test
            - build-goalrev-ganache-core
          
      
      - deploy_to_cluster:
          name: deploy-to-dev-api
          requires:
            - deployment-test
            - approve-api-deploy
          environment: development
          filters:
            branches:
              only:
                - main
      - deploy_to_cluster:
          name: deploy-to-dev-core
          requires:
            - deployment-test
            - approve-core-deploy
          environment: development
          filters:
            branches:
              only:
                - main
      - deploy_to_cluster:
          name: deploy-to-dev-processor
          requires:
            - deployment-test
            - approve-processor-deploy
          environment: development
          filters:
            branches:
              only:
                - main
      - deploy_to_cluster:
          name: deploy-to-dev-ganache-core
          requires:
            - deployment-test
            - approve-ganache-core-deploy
          environment: development
        

      
      

